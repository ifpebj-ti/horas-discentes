name: Generate Vulnerability Badge

on:
  schedule:
    - cron: '0 0 * * *' # Executa diariamente à meia-noite
  workflow_dispatch:

jobs:
  generate-badge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Obter número de vulnerabilidades via GraphQL
        id: get_vulnerabilities
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          QUERY='{ repository(owner: "ingriidssantoss", name: "horas-discentes") { vulnerabilityAlerts(first: 100, states: OPEN) { totalCount } } }'
          RESPONSE=$(curl -s -H "Authorization: bearer $GH_TOKEN" -X POST -d "{\"query\": \"$QUERY\"}" https://api.github.com/graphql)
          COUNT=$(echo "$RESPONSE" | jq '.data.repository.vulnerabilityAlerts.totalCount')
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Gerar badge SVG
        id: gerar_badge
        run: |
          COUNT=${{ steps.get_vulnerabilities.outputs.count }}
          COLOR="brightgreen"
          if [ "$COUNT" -gt 0 ]; then
            COLOR="red"
          fi
          echo "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"20\">
            <rect width=\"200\" height=\"20\" fill=\"$COLOR\"/>
            <text x=\"100\" y=\"14\" fill=\"#fff\" font-family=\"Verdana\" font-size=\"12\" text-anchor=\"middle\">
              Vulnerabilidades: $COUNT
            </text>
          </svg>" > badge.svg

      - name: Commit e push do badge
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add badge.svg
          git commit -m "Atualizar badge de vulnerabilidades" || echo "Nada para commitar"

          # Forçar uso do token pessoal
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/ifpebj-ti/horas-discentes.git
          git push origin main
