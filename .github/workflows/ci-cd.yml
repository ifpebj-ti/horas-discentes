name: CI/CD Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
      - 'Back/**'
  pull_request:
    branches:
      - main
    paths:
      - 'front/**'
      - 'Back/**'

jobs:
  frontend:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Docker login with GITHUB_TOKEN
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/horas-discentes-frontend:latest -f Dockerfile .

      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh

      - name: Scan frontend image for critical vulnerabilities
        run: |
          docker scout cves --only-severity=critical --exit-code-on-vuln=1 horas-discentes-frontend:latest
          docker scout quickview horas-discentes-frontend:latest

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/horas-discentes-frontend:latest

  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    defaults:
      run:
        working-directory: Back

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Docker login with GITHUB_TOKEN
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/horas-discentes-backend:latest -f ../Back/Dockerfile ..

      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh

      - name: Scan backend image for critical vulnerabilities
        run: |
          docker scout cves --only-severity=critical --exit-code-on-vuln=1 horas-discentes-backend:latest
          docker scout quickview horas-discentes-backend:latest

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/horas-discentes-backend:latest