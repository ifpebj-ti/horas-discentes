version: '3.8'

services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "${PORT_MACHINE_FRONTEND}:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_URL}
    depends_on:
      - backend
    networks:
      - rede-front
    restart: unless-stopped

  backend:
    build:
      context: ./Back/Back.API
      dockerfile: Dockerfile
    ports:
      - "${PORT_MACHINE_BACKEND}:5000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ASPNETCORE_URLS=http://+:5000
    depends_on:
      - db
    networks:
      - rede-front
      - rede-back
    restart: unless-stopped

  db: 
    image: postgres:15
    container_name: horas-discentes-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 91188982
      POSTGRES_DB: horas_discentes_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - rede-back

  nginx:
    image: nginx:latest
    container_name: horas-discentes-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - rede-back
      - rede-front
    depends_on:
      - frontend
      - backend

volumes:
  db_data:

networks:
  rede-back:
  rede-front:
